@{
    ViewData["Title"] = "Dashboard";
    var total = (int)(ViewBag.TotalTasks ?? 0);
    var completed = (int)(ViewBag.CompletedTasks ?? 0);
    var active = (int)(ViewBag.ActiveTasks ?? 0);
    var productivity = (int)(ViewBag.Productivity ?? 0);
    string message = (string)(ViewBag.Motivation ?? "Keep going!");
    string[] labels = (string[])(ViewBag.WeeklyLabels ?? Array.Empty<string>());
    int[] counts = (int[])(ViewBag.WeeklyCounts ?? Array.Empty<int>());
}

<div class="row g-3 mb-4">
    <div class="col-12 col-md-4">
        <div class="card card-hover shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between">
                    <div>
                        <div class="text-secondary small">Total Tasks</div>
                        <div class="h3 mb-0">@total</div>
                    </div>
                    <i class="fa-solid fa-list-check fa-2x text-primary"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-4">
        <div class="card card-hover shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between">
                    <div>
                        <div class="text-secondary small">Completed</div>
                        <div class="h3 mb-0">@completed</div>
                    </div>
                    <i class="fa-solid fa-check-circle fa-2x text-success"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-4">
        <div class="card card-hover shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex align-items-center justify-content-between">
                    <div>
                        <div class="text-secondary small">Active</div>
                        <div class="h3 mb-0">@active</div>
                    </div>
                    <i class="fa-solid fa-bolt fa-2x text-warning"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row g-3 mb-4">
    <div class="col-12 col-lg-6">
        <div class="card shadow-sm h-100">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span>Productivity Score</span>
                <span class="fw-semibold">@productivity%</span>
            </div>
            <div class="card-body">
                <div class="progress rounded-pill">
                    <div class="progress-bar" role="progressbar" style="width:@productivity%">@productivity%</div>
                </div>
                <div class="mt-3 text-secondary small">Score = (Completed / Total) Ã— 100</div>
            </div>
        </div>
    </div>
    <div class="col-12 col-lg-6">
        <div class="card shadow-sm h-100">
            <div class="card-header">Weekly Completions</div>
            <div class="card-body">
                <canvas id="weeklyChart" height="140"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm border-0 bg-body-tertiary stt-quote">
    <div class="card-body d-flex align-items-center gap-3">
        <i class="fa-solid fa-quote-left text-primary"></i>
        <div id="quoteText" class="fs-5 m-0">@message</div>
    </div>
  </div>

@section Scripts {
<script>
    (function(){
        var ctx = document.getElementById('weeklyChart');
        if (!ctx) return;
        var labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(labels));
        var data = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(counts));
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Completed',
                    data: data,
                    backgroundColor: 'rgba(13,110,253,0.6)'
                }]
            },
            options: {
                responsive: true,
                scales: { y: { beginAtZero: true, precision: 0 } }
            }
        });
    })();
</script>
}

<script>
  (function(){
    function refreshQuote(){
      fetch('/Home/Quote').then(r=>r.json()).then(function(data){
        var el = document.getElementById('quoteText');
        if (!el) return;
        el.classList.remove('fade-in');
        void el.offsetWidth; // reflow
        el.textContent = data.message;
        el.classList.add('fade-in');
      });
    }
    setInterval(refreshQuote, 10000);
  })();
</script>


